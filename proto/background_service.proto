syntax = "proto3";

// Allows Empty Messages
import "google/protobuf/empty.proto";

package background_service;
option go_package = "./pb";

service BackgroundService {
    // Get Public Key To Encrypt Passwords 
    rpc GetPublicKey (google.protobuf.Empty) returns (PublicKey);

    // Establish / Register new User to a Workspace
    rpc InitNewWorkSpaceConnection (InitRequest)  returns (InitResponse);

    // Request to Open a gRPC Port for Data Transfer
    rpc GetWorkspace (WorkspaceRequest) returns (GetWorkspaceResponse);

}

message PublicKey {
    bytes key = 1;
}

message InitRequest {
    string workspace_name = 1;
    string username = 2;
    string password = 3;
    bytes public_key = 4;
    string port = 5;
  }
  
  message InitResponse {
    int32 response = 1; // 200 [Valid / ACK / OK] ||| 4000 [InValid / You Fucked Up Somewhere]
    int32 port = 2;
  }

message WorkspaceRequest {
    string workspace_name = 1;
    string password = 3;
}

message GetWorkspaceResponse {
    int32 response = 1; // 200 [Valid / ACK / OK] ||| 4000 [InValid / You Fucked Up Somewhere]
    int32 port = 2;
}



service DataService {
    rpc GetData (DataRequest) returns (stream Data);
}

message DataRequest {
    string workspace_name = 1;
    string connection_ip = 2;
}

message Data {
    uint32 filetype = 1; // Data[0] or AES Key[1] or AES IV[2]
    bytes chunk = 2;
}